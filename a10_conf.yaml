# 任务名称
TaskName: "gen_label_a10"
# 任务描述
Description: "gen_label_a10"
# 入口命令
Entrypoint: echo "turn into smile"

# 入口命令的参数，平台将其拼接在入口命令后
# 标签
Tags: []
# 本地的代码路径，如是目录且以 '/' 结尾，则将该目录下的所有内容上传到 RemoteMountCodePath，如是目录且不以 '/' 结尾，则将该目录及该目录下
# 所有内容上传到 RemoteMountCodePath.
# UserCodePath: "/root/work/VideoCrafter"
# # 容器中的代码挂载路径
# RemoteMountCodePath: "/root/code"
# 环境变量
Envs: []
    # - Name: "env1"
    #   Value: "value1"
    # - Name: "env2"
    #   Value: "value2"
    #   IsPrivate: false     # 是否将某个环境变量设置为在详情页中仅创建人可见
# 镜像 URL 地址
# ImageUrl: "vemlp-cn-shanghai.cr.volces.com/preset-images/pytorch:1.12.1-cu11.3.0-py3.10-ubuntu20.04"
ImageUrl: "registry-cn-shanghai.cr.volces.com/images/mummy23:1006"
# 当 ImageUrl 为私有仓库的镜像时需要填写仓库的用户名和密钥才能拉取镜像
# ImageCredential:
#     RegistryUsername: "replace with your RegistryUsername"
#     RegistryToken: "replace with your RegistryToken"
# 所属资源组的 ID，为空时默认使用公共资源组，不为空时修改成用户的专有资源组的 ID. 最新版本的 volc 将逐步废弃该字段的支持
# ResourceGroupID: "replace with your ResourceGroupID"
# 队列 ID，为空时使用公共队列
ResourceQueueID: "q-20230712153135-nmqtb"
# 队列名称，优先级高于 ResourceQueueID
# ResourceQueueName: "replace with your ResourceQueueName"
# 训练框架，支持 TensorFlowPS / PyTorchDDP / MPI / BytePS / Custom
Framework: "PyTorchDDP"
# 实例配置，包含角色名称（RoleName）、角色数量（RoleReplicas）以及具体的实例规格（Flavor）
TaskRoleSpecs:
  - RoleName: "worker"
    RoleReplicas: 1
    # ml.pni2l.3xlarge 14 vCPU 245 GiB NVIDIA-A800-SXM4-80GB *1
    # ml.pni2l.7xlarge 2gpu
    # ml.pni2l.14xlarge 4gpu
    # ml.pni2l.28xlarge 8gpu
    Flavor: "ml.gni2.28xlarge"
    # GpuRate: 0.1 # 非必填，当需要切分 GPU 时请填写切分比例，取值范围为 (0, 1]。不同型号的 GPU 的可切分数不同，比如 ml.g1v.2xlarge(Tesla-V100) 可以切分成 8 份，当 GpuRate 填写 0.1 时，会向上取整为 1/8 卡。
# 最长运行时间
ActiveDeadlineSeconds: 432000
# 实例保留时长
DelayExitTimeSeconds: 10000h
# 10000h
# 可见范围，支持 Public / Queue / Private
# AccessType: "Public"
# 可见用户
# AccessUsers:
#     - "xxx"
# Preemptible: false  # 非必填，配置该任务是否为可抢占任务，默认不可抢占
# Priority: 4         # 非必填，配置任务优先级（数字越大优先级越高），仅支持配置部分档位（默认为2、4、6）。不配置时以队列中自定义任务的默认优先级为准
# 自动重试
# RetryOptions:
#     EnableRetry: false     # 是否开启自动重试，默认关闭
#     MaxRetryTimes: 5       # 最大重试次数
#     IntervalSeconds: 120   # 重试间隔 = 新任务提交的时刻 - 上个任务终止的时刻
#     PolicySets:            # 自动重试的触发条件，支持 Failed（任务失败）、InstanceReclaimed（闲时资源回收）
#          - "Failed"
# 是否开启 TensorBoard
EnableTensorBoard: False
# 开启 TensorBoard 后填写，将日志写入到 NAS 或 vePFS 内，需开白
# TensorBoardStorage:
#     Type: "Nas/Vepfs"                     # 必填，TensorBoard 日志写入存储实例类型，可填写 Nas 或 Vepfs
#     NasId: "replace with your NAS Id"     # NAS 实例 Id，当 Type 为 Nas 时填写，与 NasAddr 至少选填一个
#     NasAddr: "replace with your NAS Addr" # NAS 实例挂载点地址，当 Type 为 Nas 时填写，与 NasId 至少选填一个
#     SubPath: "replace with NAS sub path"  # 必填，TensorBoard 日志写入的存储实例子目录，当 Type 为 vePFS 时，需要拥有该子目录的挂载权限 
# 挂载数据盘至训练容器中
# SidecarMemoryRatio: "replace with your ratio"   # TOS 数据盘的缓存服务所需的内存比例
Storages:
  - Type: "Vepfs"                                                   # 挂载 vePFS 数据盘
    MountPath: "/work00"                                            # 容器中的挂载目录
    SubPath: "group-xiangyu/liangjiajun/llz_work"                   # 拥有挂载权限的 vePFS 子目录，挂载 vePFS 根目录时可忽略
  - Type: "Vepfs"                                           
    MountPath: "/dataset00"                     
    SubPath: "group-xiangyu/liangjiajun/Datasets" 
  - Type: "Vepfs"                                           
    MountPath: "/huggingface00"                     
    SubPath: "group-xiangyu/liangjiajun/huggingface" 
  - Type: "Vepfs"                                           
    MountPath: "/models00"                     
    SubPath: "group-xiangyu/liangjiajun/models" 
